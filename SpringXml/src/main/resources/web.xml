<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--Using Application Context-->
    <bean id="applicationContext" class="com.training.beanLifeCycle.Person">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Application Context"  type="java.lang.String"></constructor-arg>
    </bean>

    <bean id="applicationContextSingleTonScope" class="com.training.beanLifeCycle.Person" scope="singleton">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Application Context Single Ton Scope" ></constructor-arg>
    </bean>

    <bean id="applicationContextPrototype" class="com.training.beanLifeCycle.Person" scope="prototype">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Application Context Prototype Scope" ></constructor-arg>
    </bean>

    <bean id="contextPathXmlApplicationContext" class="com.training.beanLifeCycle.Person">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Context Path XML Application Context"  type="java.lang.String"></constructor-arg>
    </bean>

    <!--Not Working-->
    <!--<bean id="applicationContextRequest" class="com.training.beanLifeCycle.Person" scope="request">
        <constructor-arg value="Using Application Context Request Scope" ></constructor-arg>
    </bean>

    <bean id="applicationContextSession" class="com.training.beanLifeCycle.Person" scope="session">
        <constructor-arg value="Using Application Context Session Scope" ></constructor-arg>
    </bean>-->

    <!--Using Bean Factory-->
    <bean id="beanFactory" class="com.training.beanLifeCycle.Person">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Bean Factory" ></constructor-arg>
    </bean>

    <bean id="beanFactorySingleTonScope" class="com.training.beanLifeCycle.Person" scope="singleton">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Bean Factory Single Ton Scope" ></constructor-arg>
    </bean>

    <bean id="beanFactoryPrototype" class="com.training.beanLifeCycle.Person" scope="prototype">
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Using Bean Factory Prototype Scope" ></constructor-arg>
    </bean>

    <bean id="beanLifeCycleMethods" class="com.training.beanLifeCycle.Person" init-method="init" destroy-method="destroy" >
        <constructor-arg value="Only"  type="java.lang.String"></constructor-arg>
        <constructor-arg value="Life Cycle Methods testing" ></constructor-arg>
    </bean>

    <!--Load the pre and post initialization-->
    <!--<bean class="com.training.beanLifeCycle.InitPerson"/>-->

    <!--Inheritance Without Extends Keyword-->
    <bean id = "softwareCompanyBean" class = "com.training.inheritance.SoftwareCompany">
        <property name = "companyName" value = "Semantic Bits !"/>
        <property name = "typeOfCompany" value = "Service Based Company!"/>
    </bean>

    <bean id = "hardwareCompanyBean" class = "com.training.inheritance.HardwareCompany" parent = "softwareCompanyBean">
        <property name = "companyName" value = "Royal Enfield!"/>
        <property name = "totalStaff" value = "1500"/>
    </bean>

    <!--Inheritance With Extends Keyword-->
    <bean id="laptop" class="com.training.inheritance.withExtends.Laptops" >
        <property name="hardDiskCapacity" value="One TeraByte"/>
        <property name="ram" value="Sixteen GigaBytes"/>
    </bean>
    <bean id="macbook" class="com.training.inheritance.withExtends.MacBook" parent="laptop">
        <property name="osType" value="IOS"/>
    </bean>

    <!--Dependency Injection with Ref-->
    <bean id="iphoneBean" class="com.training.dependencyInjection.Iphone"/>

    <bean id="mobileBean"
          class="com.training.dependencyInjection.Mobile">
        <constructor-arg ref="iphoneBean"/>
    </bean>

    <!--Single Ton And Prototype Differences-->
    <bean id="engineBeanSingleTon" class="com.training.beanScope.Engine" scope="singleton"/>

    <bean id="engineBeanPrototype" class="com.training.beanScope.Engine" scope="prototype"/>

    <!--AutoWiring-->
        <!--AutoWiring By Name-->
        <!--<bean name="room1" class="com.training.autoWire.Room">
            <property name="roomColor" value="Blue"/>
            <property name="roomType" value="Master BedRoom"/>
        </bean>-->
        <bean name="room" class="com.training.autoWire.Room">
            <property name="roomType" value="Children's BedRoom"/>
            <property name="roomColor" value="Green"/>
        </bean>
        <bean name="building" class="com.training.autoWire.Building" autowire="byName">
            <property name="builderName" value="Sai Raj"/>
        </bean>

        <!--<bean name="building" class="com.training.autoWire.Building" autowire="byType">
            <property name="builderName" value="Sai Raj"/>
        </bean>-->

    <!--AutoWiring By Type-->
        <!--<bean id="buildingBeanByType" class="com.training.autoWire.Building" autowire="byType"></bean>-->

        <!--AutoWiring By Constructor-->
        <!--<bean id="buildingBeanConstructor" class="com.training.autoWire.Building" autowire="constructor"></bean>-->

        <!--AutoWiring By No-->
        <!--<bean id="buildingBeanNo" class="com.training.autoWire.Building" autowire="no"></bean>-->

        <!--<bean id="room" class="com.training.autoWire.Room"></bean>-->

</beans>
